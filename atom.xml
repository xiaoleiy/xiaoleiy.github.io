<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XiaoleiY</title>
  
  <subtitle>Familiar conversations from unfamiliar perspective.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-09-27T12:46:25.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>XiaoleiY</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于Docker部署Ambari 集群环境</title>
    <link href="http://yoursite.com/2017/09/27/introduction-ambari-setup-on-docker/"/>
    <id>http://yoursite.com/2017/09/27/introduction-ambari-setup-on-docker/</id>
    <published>2017-09-27T12:42:08.000Z</published>
    <updated>2017-09-27T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>Ambari是Apache的开源项目，它帮助用户在GUI页面上简单的部署、管理、监控Hadoop集群环境。Ambari支持的Hadoop组件包括HDFS、Hive、HBase、Spark、Yarn等，HortonWorks官方也是采用Ambari来完成自家HDP套件的安装、管理及监控的。除了预置的组件之外，Ambari还支持自定义组件的安装，同时，支持RESTful的API，继而可以通过命令行等方式调用Ambari来完成一些自动化的任务。</p><p>本文共分为两部分，第一部分介绍如何在Docker虚拟化环境中部署Ambari；第二部分介绍如何基于Ambari来部署和管理Hadoop集群。</p><a id="more"></a><h3 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h3><ul><li>Docker发行版：Docker for Mac</li><li>Docker版本：17.06.2-ce</li><li>Docker容器OS：Ubuntu 14.04</li><li>Ambari版本：2.5.2.0</li></ul><h3 id="Docker环境准备"><a href="#Docker环境准备" class="headerlink" title="Docker环境准备"></a>Docker环境准备</h3><ol><li>拉取Docker镜像：在宿主机上执行命令 <code>docker pull ubuntu:14.04</code> 从远端仓库中获取Ubuntu的镜像，也可以获取其他OS的镜像，本文以Ubuntu为例</li><li>启动Docker容器：执行如下命令，以ubuntu:14.04镜像为基础启动容器：<pre><code>docker run -itd --name ambari_new -p 8080:8080 -p 3306:3306 -v /Users/yuxiaolei/Workspace/dockerShared:/dockerShared ubuntu:14.04 /bin/bash</code></pre></li></ol><p>由于Ambari启动Web程序的时候占用8080端口，因此要从Docker宿主机上访问Ambari页面，需要通过参数 -p 来制定端口映射；<br>作为新手，笔者在容器内部署好Ambari之后，才发现Web页面的8080端口和MySQL的3306端口（可选）没有暴露给Docker宿主机，也就没法从宿主机上通过浏览器来登陆Ambari，因此必须想办法在已有容器上开放端口。</p><p>有两个方法：<br>1）如果宿主机为Linux系统，则修改iptables防火墙来指定端口映射规则；<br>2）如果是非Linux系统，可以将已装Ambari的容器commit为新的镜像，再基于该镜像创建新的容器。此时，就可以在 <code>docker run</code> 命令中添加参数 -p 来指定端口映射了。</p><p>还有一个问题，Ambari将其数据存储在数据库中，支持MySQL、PostgreSQL等数据库；容器内安装MySQL之后，基于上一步创建的新容器里，会发现MySQL启动不起来，执行命令 <code>/etc/init.d/mysql restart</code> 启动失败，在 <code>/var/log/mysql/error.log</code> 日志文件中打印有 <code>170802 14:02:59 [ERROR] Fatal error: Can&#39;t open and lock privilege tables: Got error 140 from storage engine</code> 的错误，经过网上查资料，需要在创建容器的时候添加参数 <code>-v /var/lib/mysql</code> 将MySQL数据存储路径声明为数据卷，即可解决问题。<br>启动容器之后，执行命令 <code>docker exec -it ambari /bin/bash</code> 进入容器内部。</p><h3 id="Ambari安装"><a href="#Ambari安装" class="headerlink" title="Ambari安装"></a>Ambari安装</h3><ol><li><p>配置Ubuntu的软件仓库源：<br> 国内建议采用阿里云的软件源，在root账号下用vim打开<code>/etc/apt/sources.list</code>文件，删除文件所有内容，粘贴如下内容：</p><pre><code>deb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse</code></pre><p> 执行命令 <code>apt-get update</code> 完成软件列表更新</p></li><li><p>安装Ambari所依赖的软件</p><ul><li><p><strong>Oracle JDK：</strong> 逐条执行如下命令，以添加WebUpd8团队（<a href="https://launchpad.net/~webupd8team/+archive/ubuntu/java" target="_blank" rel="external">https://launchpad.net/~webupd8team/+archive/ubuntu/java</a>）提供的Oracle JDK仓库源，并从该仓库安装JDK：</p><pre><code>apt-get install software-properties-commonsudo add-apt-repository ppa:webupd8team/javasudo apt-get updatesudo apt-get install oracle-java7-installersudo apt-get install oracle-java7-set-default</code></pre><p>  完成安装之后，在 ~/.bashrc 文件末尾添加命令 <code>export JAVA_HOME=/usr/lib/jvm/java-8-oracle</code> 以配置JAVA_HOME 环境变量。</p></li><li><p><strong>MySQL：</strong> 执行命令 <code>apt-get install mysql-server</code> 安装MySQL服务器，安装完成后执行命令 <code>mysql -uroot -proot</code> 进入MySQL客户端，执行如下SQL代码：</p><pre><code>create database ambari;use ambari;GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;root_password&apos; WITH GRANT OPTION;FLUSH PRIVILEGES;exit;</code></pre><p>  由于Ambari的数据存储在MySQL数据库中，这里为Ambari单独创建了database，并为其赋了完全控制权限；说明：假设MySQL数据库root用户的密码为：root_password<br>  修改 <code>/etc/mysql/my.conf</code>，将<code>skip-external-locking</code>注释掉，并确保 <code>bind-address = 0.0.0.0</code> 配置，以使MySQL可被远程主机访问。<br>  执行命令<code>/etc/init.d/mysql restart</code>重启MySQL 服务。</p></li><li><p><strong>时间同步服务器ntp：</strong> 执行命令 <code>apt-get install ntp</code>  安装ntp时间同步服务器，以便于集群环境中各节点的时钟一致；执行命令 <code>sudo service ntp restart</code>  重启ntp服务。</p></li></ul></li><li><p>下载Ambari仓库文件</p><ul><li>进入 <code>cd /etc/apt/sources.list.d</code> 目录，执行命令 <code>wget http://public-repo-1.hortonworks.com/ambari/ubuntu14/2.x/updates/2.5.2.0/ambari.list</code> 从HortonWorks仓库中下载Ambari源文件，下载后切勿修改list文件名；</li><li>执行命令 <code>apt-key adv --recv-keys --keyserver keyserver.ubuntu.com B9733A7A07513CAD</code> 以信任远端仓库的GPG签名</li><li>执行命令 <code>apt-get update</code> 更新Ambari软件源</li><li>执行命令 <code>apt-get install ambari</code> 安装Ambari套件，由于软件包较大（700多MB），这里情耐心等待，不过apt-get支持断点下载，网络终端后重新执行命令时不会从零开始下载</li></ul></li><li>配置Ambari：<ul><li>执行命令 <code>mysql -uroot -proot</code> 进入MySQL客户端，执行命令 <code>source ambari</code> 进入ambari的数据库，并执行命令 <code>source /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql</code> 来完成Ambari的数据库表初始化操作；</li><li>执行命令 <code>ambari-server setup</code> 启动Ambari的引导式配置操作，根据指导做配置即可。需要注意的是，JDK不要选择由Ambari从网络下载，应该选择自定义路径，然后输入 <code>/usr/lib/jvm/java-8-oracle</code>  即可；</li></ul></li><li>启动Ambari：执行命令<code>ambari-server start</code>，启动日志存储路径为 <code>/var/log/ambari-server/ambari-server.log</code></li><li>启动之后，由于我们之前做了Docker容器的端口映射，因此可以在宿主机上打开浏览器输入 <a href="http://localhost:8080/" title="http://localhost:8080" target="_blank" rel="external">http://localhost:8080</a> 即可访问Ambari登陆页面</li><li>登陆用户名和密码均为admin，登陆之后就可以看到Ambari的首页了，如下图：<br> <img src="DraggedImage.png" alt=""> <img src="/2017/09/27/introduction-ambari-setup-on-docker/DraggedImage.png" alt="Ambari首页" title="Ambari首页"></li></ol><p>下一篇文章会介绍Ambari分布式环境配置和管理。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Ambari是Apache的开源项目，它帮助用户在GUI页面上简单的部署、管理、监控Hadoop集群环境。Ambari支持的Hadoop组件包括HDFS、Hive、HBase、Spark、Yarn等，HortonWorks官方也是采用Ambari来完成自家HDP套件的安装、管理及监控的。除了预置的组件之外，Ambari还支持自定义组件的安装，同时，支持RESTful的API，继而可以通过命令行等方式调用Ambari来完成一些自动化的任务。&lt;/p&gt;
&lt;p&gt;本文共分为两部分，第一部分介绍如何在Docker虚拟化环境中部署Ambari；第二部分介绍如何基于Ambari来部署和管理Hadoop集群。&lt;/p&gt;
    
    </summary>
    
      <category term="Techs" scheme="http://yoursite.com/categories/Techs/"/>
    
    
      <category term="Docker" scheme="http://yoursite.com/tags/Docker/"/>
    
      <category term="Ambari" scheme="http://yoursite.com/tags/Ambari/"/>
    
      <category term="Ubuntu" scheme="http://yoursite.com/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>从“寻找加西亚”说起</title>
    <link href="http://yoursite.com/2017/09/16/say-goodbye-to-huawei/"/>
    <id>http://yoursite.com/2017/09/16/say-goodbye-to-huawei/</id>
    <published>2017-09-16T14:02:07.000Z</published>
    <updated>2017-09-16T14:09:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近华为内部因为NaturalUI抄袭AdminUI事件，延伸出来一些有趣的事情，先是老板专门发文要求对爆出该事件的兄弟连升两级，并要求无线产品线总裁保护，避免遭受打击报复；接着是隔天发文摘录心声文章“寻找加西亚”，鼓励公司向优秀人才学习（而不纠结于人才的缺点），这里说的是西研所2015年OpenStack内源贡献者孔令贤连升三级后不堪压力离职的事情。</p><p>翻到了孔令贤的博客，他当时是基层主官，技术敏感度逐渐下降，基于对公司连升三级后带来前所未有的压力，再加上母亲离世，造成了最终离职的结果，移民新西兰加入了云计算公司Catalyst IT，和妻子、出生不到1岁的儿子过着悠闲的生活。</p><p>从孔令贤的文章中可以看到，他是个有技术追求，同时又不对生活妥协的人，家庭和生活质量是不可缺少的。这一点，和我还有点像，早知道自己不可能在华为这样的公司一直待下去，也因为雾霾、教育、城市管理等生活质量差的切腹体验，有过移民国外的想法，至少给孩子一个好的成长环境。</p><p>现如今，经历了华为六年，我也站在了下一站的路口，国庆后就要离开华为了。回首这六年，从来没有认认真真的写过什么，都是在忙忙碌碌的前进；此时，有一种补偿自己，记录下所有经历的冲动。在华为度过了最年轻的年华，从2011年8月8日到2017年10月11日，从23到29岁，从青葱未懂到准爸爸，人生最美好的一段时间就这么匆匆流过，像极了无数次梦里的情景，跑啊跑，追啊追，也不知道在追什么，但是脚步却永远使不上力气，所谓<strong>心有不甘</strong>。</p><p>一路走过华为6年，撸过了各种架构的Java后台系统、MySQL数据库性能优化、前端开发、大数据开发和Spark性能优化；面对过各种压力，带领从各种公司进入的新员工做项目开发，每天晚上10点以后下班，半夜做梦都在写代码讨论问题；参与挑战项目，1个月时间内4个人完成分布式架构的迁移，每晚10点开会过进展，每周六例行加班；一次又一次，都是艰难的磨炼，也正是因为连续不断的挑战，才让我实实在在的体会到如何写好代码、如何做好产品。</p><p>在这个过程中，也逐渐认识到，在华为（在这个部门），技术人员的发展通道其实是很窄的，你除了技术能力好，还要会写材料，还要能和各种角色沟通博弈，还要对团队能力负责任。当然，当这些你都做到了，你还要等机会，不比管理岗位，高级的技术岗位比较稀少，很多人在华为待了十来年还在一线写代码，而和他同时期入职的人，可能已经当了X级部门的大领导。高级的技术岗位，又都是不写代码、不关注模块设计的人，他们绝大部分的工作是开会和写材料，他们更多关注的是方案和整体设计，侃侃而谈的都是价值和眼界。最近两年，每次沟通领导都会给我讲，你的技术没问题，能够独当一面，但是要建立你的影响力，这让我很为难，是真的很为难。我自认为是达不到公司高级技术岗位的要求的，我只是偏爱一些高效率的工具，喜欢关注大家都在玩的新技术（动不动也自己折腾一番），也喜欢踏踏实实的攻破技术难题，将自己觉得好的想法付诸于产品中，这也算是自己的价值所在。当然，我并不是唯技术论者，对于产品要解决的客户问题，以及怎么样更好的解决问题，我也是颇有兴趣的。技术可以帮助你踏入行业的门槛，而业务可以让你走的更远，业务不枯燥不繁杂，理解业务和客户，那么你就能洞察这个领域的本质规律，技术上需要1人月解决的问题，可能你在业务上的另一套方案3天就能解决问题，因此价值所在也是不言而喻。另外，团队协作和管理也是一个不可避过的话题，华为的基层主管（PL、PM）是很累的，不仅因为业务复杂，一个大的部门里，有各种各样的角色，各类繁杂冗长的流程，都需要你来协调处理，你还要抱有一份“私心”，多争取一些出彩的机会给自己团队，这样才能有好的绩效。当然这也是大公司保持高产出所应有的代价，用流程来保障组织运作起来，用KPI来驱动员工永不停止的提升产出。我所向往的 好的团队协作和管理，不是刻意的、流程化的机械运作，而是团队主动营造的氛围，吸引大家发挥自己的潜力。大家的动机，不是因为KPI在后面追赶，而是前方更好玩更有挑战的难题。</p><p>在那么多艰难的日子里，曾经对华为有很多的不爽，但真到了我要离开的时候，却又有很多对它的肯定和赞许，希望利润率能够有所提高，在智能时代里，追赶上别人的脚步。</p><p>后面的路途，没有了外部的高压环境，看似舒适，其实是逃离了舒适区之后的无人区，所有的约束都是自己给的，没有约束，就会随欲望漂泊，没有方向，也会浪费太多时间。要保持对技术的敏感度，不断学习新的东西并付诸于实践；还要生活规律，保持每周锻炼身体不间断；还要多看科技和经济领域的书籍，作为长远发展的基石；</p><p>这是一场自己和自己的搏斗，准备好上路吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近华为内部因为NaturalUI抄袭AdminUI事件，延伸出来一些有趣的事情，先是老板专门发文要求对爆出该事件的兄弟连升两级，并要求无线产品线总裁保护，避免遭受打击报复；接着是隔天发文摘录心声文章“寻找加西亚”，鼓励公司向优秀人才学习（而不纠结于人才的缺点），这里说的是
      
    
    </summary>
    
    
  </entry>
  
</feed>
